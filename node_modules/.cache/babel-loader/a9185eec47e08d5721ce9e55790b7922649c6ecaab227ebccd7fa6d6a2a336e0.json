{"ast":null,"code":"var _jsxFileName = \"/home/bryan-c/Documents/todo/src/components/Todo.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function Todo(_ref) {\n  _s();\n  let {\n    task,\n    deleteTodo,\n    editTodo\n  } = _ref;\n  const [isEditing, setIsEditing] = useState(false);\n  const [newTask, setNewTask] = useState(task.task);\n  const handleDelete = () => {\n    deleteTodo(task.id);\n  };\n  const handleEdit = () => {\n    setIsEditing(true);\n  };\n  const handleSave = () => {\n    editTodo(task.id, newTask);\n    setIsEditing(false);\n  };\n  const handleCancel = () => {\n    setIsEditing(false);\n    setNewTask(task.task);\n  };\n  const handleChange = e => {\n    setNewTask(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Todo\",\n    children: isEditing ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: newTask,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSave,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: task.task\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleEdit,\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDelete,\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 7\n  }, this);\n}\n_s(Todo, \"i7xgcqeQjro7A7Azhjzgk2XgwLA=\");\n_c = Todo;\nvar _c;\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Todo","_ref","_s","task","deleteTodo","editTodo","isEditing","setIsEditing","newTask","setNewTask","handleDelete","id","handleEdit","handleSave","handleCancel","handleChange","e","target","value","className","children","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/home/bryan-c/Documents/todo/src/components/Todo.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nexport function Todo({ task, deleteTodo, editTodo }) {\n    const [isEditing, setIsEditing] = useState(false);\n    const [newTask, setNewTask] = useState(task.task);\n  \n    const handleDelete = () => {\n      deleteTodo(task.id);\n    };\n  \n    const handleEdit = () => {\n      setIsEditing(true);\n    };\n  \n    const handleSave = () => {\n      editTodo(task.id, newTask);\n      setIsEditing(false);\n    };\n  \n    const handleCancel = () => {\n      setIsEditing(false);\n      setNewTask(task.task);\n    };\n  \n    const handleChange = e => {\n      setNewTask(e.target.value);\n    };\n  \n    return (\n      <div className=\"Todo\">\n        {isEditing ? (\n          <>\n            <input value={newTask} onChange={handleChange} />\n            <button onClick={handleSave}>Save</button>\n            <button onClick={handleCancel}>Cancel</button>\n          </>\n        ) : (\n          <>\n            <p>{task.task}</p>\n            <button onClick={handleEdit}>Edit</button>\n            <button onClick={handleDelete}>Delete</button>\n          </>\n        )}\n      </div>\n    );\n  }"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAExC,OAAO,SAASC,IAAIA,CAAAC,IAAA,EAAiC;EAAAC,EAAA;EAAA,IAAhC;IAAEC,IAAI;IAAEC,UAAU;IAAEC;EAAS,CAAC,GAAAJ,IAAA;EAC/C,MAAM,CAACK,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAACQ,IAAI,CAACA,IAAI,CAAC;EAEjD,MAAMO,YAAY,GAAGA,CAAA,KAAM;IACzBN,UAAU,CAACD,IAAI,CAACQ,EAAE,CAAC;EACrB,CAAC;EAED,MAAMC,UAAU,GAAGA,CAAA,KAAM;IACvBL,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,MAAMM,UAAU,GAAGA,CAAA,KAAM;IACvBR,QAAQ,CAACF,IAAI,CAACQ,EAAE,EAAEH,OAAO,CAAC;IAC1BD,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EAED,MAAMO,YAAY,GAAGA,CAAA,KAAM;IACzBP,YAAY,CAAC,KAAK,CAAC;IACnBE,UAAU,CAACN,IAAI,CAACA,IAAI,CAAC;EACvB,CAAC;EAED,MAAMY,YAAY,GAAGC,CAAC,IAAI;IACxBP,UAAU,CAACO,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC5B,CAAC;EAED,oBACErB,OAAA;IAAKsB,SAAS,EAAC,MAAM;IAAAC,QAAA,EAClBd,SAAS,gBACRT,OAAA,CAAAE,SAAA;MAAAqB,QAAA,gBACEvB,OAAA;QAAOqB,KAAK,EAAEV,OAAQ;QAACa,QAAQ,EAAEN;MAAa;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACjD5B,OAAA;QAAQ6B,OAAO,EAAEb,UAAW;QAAAO,QAAA,EAAC;MAAI;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC1C5B,OAAA;QAAQ6B,OAAO,EAAEZ,YAAa;QAAAM,QAAA,EAAC;MAAM;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,eAC9C,CAAC,gBAEH5B,OAAA,CAAAE,SAAA;MAAAqB,QAAA,gBACEvB,OAAA;QAAAuB,QAAA,EAAIjB,IAAI,CAACA;MAAI;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAClB5B,OAAA;QAAQ6B,OAAO,EAAEd,UAAW;QAAAQ,QAAA,EAAC;MAAI;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC1C5B,OAAA;QAAQ6B,OAAO,EAAEhB,YAAa;QAAAU,QAAA,EAAC;MAAM;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,eAC9C;EACH;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACvB,EAAA,CA3CaF,IAAI;AAAA2B,EAAA,GAAJ3B,IAAI;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}